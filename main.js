!function(){"use strict";var t=class{constructor(t,e){this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=e}_showInputError(t){const e=this._form.querySelector(`#${t.id}-error`);t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}_hideInputError(t){const e=this._form.querySelector(`#${t.id}-error`);t.classList.remove(this._inputErrorClass),e.textContent=""}_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}_checkFormValidity(t){return t.every((t=>t.validity.valid))}disableSubmitButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}enableSubmitButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}resetValidation(){this._toggleButtonState(),this._inputEls.forEach((t=>{this._hideInputError(t)}))}_toggleButtonState(){this._checkFormValidity(this._inputEls)?this.enableSubmitButton():this.disableSubmitButton()}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners(),this._toggleButtonState()}};class e{constructor(t,e,s){this._name=t.name,this._link=t.link,this._templateSelector=e,this._handleImageClick=s}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeButton()})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImage.addEventListener("click",(()=>this._handleImageClick({name:this._name,link:this._link})))}_handleLikeButton(){this._likeButton.classList.toggle("card__like-button_active")}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}getView(){return this._cardElement=document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0),this._cardTitle=this._cardElement.querySelector(".card__title"),this._cardImage=this._cardElement.querySelector(".card__image"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardTitle.textContent=this._name,this._cardImage.alt=this._name,this._cardImage.src=this._link,this._setEventListeners(),this._cardElement}}class s{constructor(t){let{popupSelector:e}=t;this._popupElement=document.querySelector(e),this._popupCloseButton=this._popupElement.querySelector(".modal__close")}open(){this._popupElement.classList.add("modal_opened"),this._popupElement.addEventListener("click",this._handleRemoteClose),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),this._popupElement.removeEventListener("click",this._handleRemoteClose),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=t=>{"Escape"===t.key&&this.close()};_handleRemoteClose=t=>{t.target.classList.contains("modal")&&this.close()};setEventListeners(){this._popupCloseButton.addEventListener("click",(()=>{this.close()}))}}class i extends s{constructor(t,e){super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=e}close(){this._popupForm.reset(),super.close()}_getInputValues(){return this._inputValues={},this._inputElements.forEach((t=>{this._inputValues[t.name]=t.value})),this._inputValues}setEventListeners(){super.setEventListeners(),this._inputElements=this._popupForm.querySelectorAll(".modal__form-input"),this._popupForm.addEventListener("submit",(t=>{t.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}}const n=document.querySelector(".profile__rectangle"),o=document.querySelector("#modal__form-title"),r=document.querySelector("#modal__form-description"),l=document.forms["profile-form"],a=document.querySelector(".profile__add-button"),c=document.forms["card-form"],u={inputSelector:".modal__form-input",submitButtonSelector:".modal__save",inactiveButtonClass:"modal__save_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},d=new class{constructor(t,e){let{renderer:s}=t;this._renderer=s,this._container=document.querySelector(e)}renderItems=t=>{t.forEach((t=>{this._renderer(t)}))};addItem(t){this._container.prepend(t)}}({renderer:t=>{const s=function(t){return new e(t,".card__template",(t=>{m.open(t)})).getView()}(t);d.addItem(s)}},".gallery__cards");d.renderItems([{name:"Colorado Springs",link:"https://images.unsplash.com/photo-1612898825929-3ee87a36087b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1171&q=80"},{name:"Ojai",link:"https://images.unsplash.com/photo-1609960722436-e90e5304d46b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1074&q=80"},{name:"Lake Powell",link:"https://images.unsplash.com/photo-1566909790006-9d3a0d9343a3?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1074&q=80"},{name:"Denver",link:"https://images.unsplash.com/photo-1618342835315-56f47616bf34?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=687&q=80"},{name:"Redlands",link:"https://images.unsplash.com/photo-1625639192747-89e7979474d3?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1074&q=80"},{name:"Tennessee Mountains",link:"https://images.unsplash.com/photo-1633622674885-11dc5a783ab5?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=687&q=80"}]);const _=new class{constructor(t){let{nameSelector:e,descriptionSelector:s}=t;this._name=document.querySelector(e),this._description=document.querySelector(s)}getUserInfo(){return{name:this._name.textContent,description:this._description.textContent}}setUserInfo(t){this._name.textContent=t.title,this._description.textContent=t.subtitle}}({nameSelector:".profile__title",descriptionSelector:".profile__description"}),h=new i("#modal__edit-profile",(t=>{_.setUserInfo(t)}));h.setEventListeners(),n.addEventListener("click",(()=>{h.open();const{description:t,name:e}=_.getUserInfo();o.value=e,r.value=t,f.resetValidation()}));const p=new i("#modal__new-item",(t=>{d.renderItems([t])}));p.setEventListeners(),a.addEventListener("click",(()=>{p.open(),E.resetValidation()}));const m=new class extends s{constructor(t){super({popupSelector:t}),this._previewImage=this._popupElement.querySelector(".modal__picture"),this._previewCaption=this._popupElement.querySelector(".modal__image-description")}open(t){super.open(),this._previewImage.src=t.link,this._previewImage.alt=t.name,this._previewCaption.textContent=t.name}}("#modal__picture-popup");m.setEventListeners();const f=new t(u,l);f.enableValidation();const E=new t(u,c);E.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,